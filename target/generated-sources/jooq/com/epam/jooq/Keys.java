/*
 * This file is generated by jOOQ.
 */
package com.epam.jooq;


import com.epam.jooq.tables.Description;
import com.epam.jooq.tables.Product;

import javax.annotation.processing.Generated;

import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<Record, Long> IDENTITY_DESCRIPTION = Identities0.IDENTITY_DESCRIPTION;
    public static final Identity<Record, Integer> IDENTITY_PRODUCT = Identities0.IDENTITY_PRODUCT;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<Record> DESCRIPTION_PKEY = UniqueKeys0.DESCRIPTION_PKEY;
    public static final UniqueKey<Record> PRODUCT_PKEY = UniqueKeys0.PRODUCT_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<Record, Long> IDENTITY_DESCRIPTION = Internal.createIdentity(Description.DESCRIPTION, Description.DESCRIPTION.ID);
        public static Identity<Record, Integer> IDENTITY_PRODUCT = Internal.createIdentity(Product.PRODUCT, Product.PRODUCT.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<Record> DESCRIPTION_PKEY = Internal.createUniqueKey(Description.DESCRIPTION, "description_pkey", Description.DESCRIPTION.ID);
        public static final UniqueKey<Record> PRODUCT_PKEY = Internal.createUniqueKey(Product.PRODUCT, "product_pkey", Product.PRODUCT.ID);
    }
}
