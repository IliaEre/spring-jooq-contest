/*
 * This file is generated by jOOQ.
 */
package org.jooq.epam.contest.public_.tables.records;


import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.epam.contest.public_.tables.Product;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductRecord extends UpdatableRecordImpl<ProductRecord> implements Record7<Integer, String, BigDecimal, Integer, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.product.id</code>.
     */
    public ProductRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.product.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.product.name</code>.
     */
    public ProductRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.product.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.product.price</code>.
     */
    public ProductRecord setPrice(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.product.price</code>.
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>public.product.category_id</code>.
     */
    public ProductRecord setCategoryId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.product.category_id</code>.
     */
    public Integer getCategoryId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.product.vendor</code>.
     */
    public ProductRecord setVendor(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.product.vendor</code>.
     */
    public String getVendor() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.product.sn</code>.
     */
    public ProductRecord setSn(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.product.sn</code>.
     */
    public String getSn() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.product.owner</code>.
     */
    public ProductRecord setOwner(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.product.owner</code>.
     */
    public String getOwner() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, BigDecimal, Integer, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, BigDecimal, Integer, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Product.PRODUCT.ID;
    }

    @Override
    public Field<String> field2() {
        return Product.PRODUCT.NAME;
    }

    @Override
    public Field<BigDecimal> field3() {
        return Product.PRODUCT.PRICE;
    }

    @Override
    public Field<Integer> field4() {
        return Product.PRODUCT.CATEGORY_ID;
    }

    @Override
    public Field<String> field5() {
        return Product.PRODUCT.VENDOR;
    }

    @Override
    public Field<String> field6() {
        return Product.PRODUCT.SN;
    }

    @Override
    public Field<String> field7() {
        return Product.PRODUCT.OWNER;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public BigDecimal component3() {
        return getPrice();
    }

    @Override
    public Integer component4() {
        return getCategoryId();
    }

    @Override
    public String component5() {
        return getVendor();
    }

    @Override
    public String component6() {
        return getSn();
    }

    @Override
    public String component7() {
        return getOwner();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public BigDecimal value3() {
        return getPrice();
    }

    @Override
    public Integer value4() {
        return getCategoryId();
    }

    @Override
    public String value5() {
        return getVendor();
    }

    @Override
    public String value6() {
        return getSn();
    }

    @Override
    public String value7() {
        return getOwner();
    }

    @Override
    public ProductRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ProductRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ProductRecord value3(BigDecimal value) {
        setPrice(value);
        return this;
    }

    @Override
    public ProductRecord value4(Integer value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public ProductRecord value5(String value) {
        setVendor(value);
        return this;
    }

    @Override
    public ProductRecord value6(String value) {
        setSn(value);
        return this;
    }

    @Override
    public ProductRecord value7(String value) {
        setOwner(value);
        return this;
    }

    @Override
    public ProductRecord values(Integer value1, String value2, BigDecimal value3, Integer value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductRecord
     */
    public ProductRecord() {
        super(Product.PRODUCT);
    }

    /**
     * Create a detached, initialised ProductRecord
     */
    public ProductRecord(Integer id, String name, BigDecimal price, Integer categoryId, String vendor, String sn, String owner) {
        super(Product.PRODUCT);

        setId(id);
        setName(name);
        setPrice(price);
        setCategoryId(categoryId);
        setVendor(vendor);
        setSn(sn);
        setOwner(owner);
    }

    /**
     * Create a detached, initialised ProductRecord
     */
    public ProductRecord(org.jooq.epam.contest.public_.tables.pojos.Product value) {
        super(Product.PRODUCT);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setPrice(value.getPrice());
            setCategoryId(value.getCategoryId());
            setVendor(value.getVendor());
            setSn(value.getSn());
            setOwner(value.getOwner());
        }
    }
}
